## Brute force  28ms

class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        for i in range(len(nums)):
            for j in range (i+1,len(nums)):
                if target - nums[i] == nums[j]:
                    return [i,j];
                    
                 
                    
                    
##  16ms
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        dic = dict()
        for i in range(len(nums)):
            if nums[i] < target: 
                dic[i] = nums[i]
        new_dict = {v : k for k, v in dic.items()}
        for j in range (len(dic)):
            if target-dic[j] in new_dict:
                x=new_dict[target-dic[j]]
                return [j,x]
                
                
## 16ms
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
    	D = {n:i for i,n in enumerate(nums)}
    	for i,n in enumerate(nums):
    		x = target - n
    		if x in D and D[x] != i: return [i,D[x]]
