## Brute force  4964ms

class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        for i in range(len(nums)):
            for j in range (i+1,len(nums)):
                if target - nums[i] == nums[j]:
                    return [i,j];
                    
                 
                    
                    
                
## 44ms                
class Solution:
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        h = {}
        for i, num in enumerate(nums):
            n = target - num
            if n not in h:
                h[num] = i
            else:
                return [h[n], i]
                
                
## 28ms The best solution
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
    	D = {n:i for i,n in enumerate(nums)}
    	for i,n in enumerate(nums):
    		x = target - n
    		if x in D and D[x] != i: return [i,D[x]]
