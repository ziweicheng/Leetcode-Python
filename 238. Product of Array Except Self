class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        L = [1] * len(nums)
        R = [1] * len(nums)
        for i in range(len(nums)):
            if i == 0:
                L[i] = 1
            else:
                L[i] = L[i-1]*nums[i-1]
        for i in range(len(nums)-1,-1,-1):
            if i == len(nums)-1:
                R[i] = 1
            else:
                R[i] = R[i+1]*nums[i+1]
        result = list(map(lambda x,y: x*y, L, R))
        return result
