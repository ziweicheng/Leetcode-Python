## 
Recursive algorithm

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def sumRootToLeaf(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if root == None:
            return 0
        else:
            return self.method(root,0)
    def method(self, root, totalsum):
        totalsum = totalsum*2 + root.val
        if root.left == None and root.right == None:
            return totalsum
        elif root.left == None:
            return self.method(root.right,totalsum)
        elif root.right == None:
            return self.method(root.left,totalsum)
        else:
            return self.method(root.right,totalsum) + self.method(root.left,totalsum)
