## Greddy

class Solution(object):
    def minDominoRotations(self, A, B):
        """
        :type A: List[int]
        :type B: List[int]
        :rtype: int
        """
        countA = 0
        countB = 0
        dic = [A[0],B[0]]
        for i in range (1,len(A)):
            if (A[i] not in dic) and (B[i] not in dic):
                return -1
            elif A[i] != B[i] and A[i] in dic and B[i] in dic:
                pass
            elif A[i] in dic:
                dic = [A[i]]
            else:
                dic = [B[i]]
        for j in range(len(A)):
            if A[j] == dic[0]:
                countA += 1
            if B[j] == dic[0]:
                countB += 1
        if countA > countB:
            return len(A) - countA
        else:
            return len(B) - countB
                
