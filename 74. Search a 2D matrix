#44 ms 
class Solution(object):
    def searchMatrix(self, matrix, target):
        """
        :type matrix: List[List[int]]
        :type target: int
        :rtype: bool
        """
        if not matrix or len(matrix[0]) == 0:
            return False
        else:
            row = len(matrix)
            col = len(matrix[0])
            start = 0 
            end = row
            while start < end:
                mid = (start+end)//2
                if matrix[mid][col-1] < target:
                    start = mid + 1
                else:
                    end = mid
            if start == row:
                return False
            if matrix[start][col-1] == target:
                return True
            i = start
            start = 0
            end = col
            while start < end:
                mid2 = (start+end)//2
                if matrix[i][mid2] == target:
                    return True
                elif matrix[i][mid2] < target:
                    start = mid2+1
                else:
                    end = mid2
            return False
            
            //二分法搜索：可以直接把矩阵展开搜索，O(logmn) O(1)
            //也可以分别搜索rows 和 columns.
            //特别注意二分法搜索的上限边界值有没有包含
