# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        arr1=[]
        arr2 =[]
        while l1 != None:
            arr1.append(l1.val)
            l1 = l1.next
        while l2 != None:
            arr2.append(l2.val)
            l2 = l2.next
        i=0
        sum1=0
        while i < len(arr1):
            sum1 = sum1+arr1[i]*(10**i)
            i+=1
        j=0
        sum2=0
        while j < len(arr2):
            sum2 = sum2+arr2[j]*(10**j)
            j+=1
        total= sum1+sum2
        string = str(total)
        m= len(string)-1
        l = ListNode(string[m]) 
        result = l
        while m >0:
            l.next = ListNode(string[m-1])
            l = l.next
            m-=1
        return result
        
#NodeList
