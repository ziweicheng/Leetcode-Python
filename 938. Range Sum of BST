# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def rangeSumBST(self, root: TreeNode, L: int, R: int) -> int:
        cache = []
        def function(root, L, R):
            if root.val <= R and root.val >= L:
                cache.append(root.val)
                if root.left == None and root.right == None:
                    return
                elif root.left == None:
                    function(root.right, L, R)
                elif root.right == None:
                    function(root.left, L, R)
                else:
                    function(root.left, L, R)
                    function(root.right, L, R)
            else:
                if root.left == None and root.right == None:
                    return
                elif root.left == None:
                    function(root.right, L, R)
                elif root.right == None:
                    function(root.left, L, R)
                else:
                    function(root.left, L, R)
                    function(root.right, L, R)
        function(root,L,R)
        return sum(cache)
